{"ast":null,"code":"var _jsxFileName = \"/Users/galrazabi/Desktop/Harmoni /client/src/components/RehearsalRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, createContext } from \"react\";\nimport { useGetIsAdmin } from \"../hooks/useGetIsAdmin\";\nimport { useGetUserId } from '../hooks/useGetUserId';\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\nimport { MainPlayer } from './MainPlayer';\nimport { SearchSong } from \"./SearchSong\";\nimport { io } from 'socket.io-client';\nimport { Live } from './Live';\nimport config from '../config.json';\n\n// Create a context for managing WebSocket connections across components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SocketContext = /*#__PURE__*/createContext();\nexport const RehearsalRoom = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isLive, setIsLive] = useState(false);\n  const [lyricsOrChords, setLyricsOrChords] = useState([]);\n  const [songData, setSongData] = useState({});\n  const navigate = useNavigate();\n  const userId = useGetUserId();\n  const isAdmin = useGetIsAdmin();\n  const [_, setCookie] = useCookies([\"access_token\"]);\n  useEffect(() => {\n    // Initialize socket connection only once and send the user id saved in the local storage\n    const newSocket = io(`${config.backend.url}`, {\n      query: {\n        userId\n      }\n    });\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Socket successfully connected:\", newSocket.id);\n    });\n    const handleStartRehearsal = () => {\n      setIsLive(true);\n    };\n    const handleEndRehearsal = () => {\n      setIsLive(false);\n    };\n    const handleLyricsAndChords = ({\n      song,\n      lyricsAndChords\n    }) => {\n      setLyricsOrChords(lyricsAndChords);\n      setSongData(song);\n    };\n    const handleLyrics = ({\n      song,\n      lyrics\n    }) => {\n      setLyricsOrChords(lyrics);\n      setSongData(song);\n    };\n    newSocket.on(\"startRehearsal\", handleStartRehearsal);\n    newSocket.on(\"sendLyricsAndChords\", handleLyricsAndChords);\n    newSocket.on(\"sendLyrics\", handleLyrics);\n    newSocket.on(\"endRehearsal\", handleEndRehearsal);\n    return () => {\n      // Clean up socket listeners on component unmount\n      newSocket.off(\"startRehearsal\", handleStartRehearsal);\n      newSocket.off(\"sendLyrics\", handleLyricsAndChords);\n      newSocket.off(\"sendLyricsAndChords\", handleLyricsAndChords);\n      newSocket.off(\"endRehearsal\", handleEndRehearsal);\n      newSocket.disconnect();\n    };\n  }, [userId, isAdmin]);\n\n  // Log out user, ending rehearsal if admin is live\n  const logout = () => {\n    if (isAdmin && isLive) {\n      socket.emit(\"adminEndRehearsal\");\n    }\n    setCookie(\"access_token\", \"\");\n    window.localStorage.removeItem(\"userId\");\n    window.localStorage.removeItem(\"isAdmin\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      logout\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fullscreen\",\n      children: !isLive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isAdmin ? /*#__PURE__*/_jsxDEV(SearchSong, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(MainPlayer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Live, {\n        songData: songData,\n        lyricsOrChords: lyricsOrChords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(RehearsalRoom, \"qSTruC7EMhdnRbyDHYWTguUkNCk=\", false, function () {\n  return [useNavigate, useGetUserId, useGetIsAdmin, useCookies];\n});\n_c = RehearsalRoom;\nvar _c;\n$RefreshReg$(_c, \"RehearsalRoom\");","map":{"version":3,"names":["useEffect","useState","createContext","useGetIsAdmin","useGetUserId","useNavigate","useCookies","MainPlayer","SearchSong","io","Live","config","jsxDEV","_jsxDEV","SocketContext","RehearsalRoom","_s","socket","setSocket","isLive","setIsLive","lyricsOrChords","setLyricsOrChords","songData","setSongData","navigate","userId","isAdmin","_","setCookie","newSocket","backend","url","query","on","console","log","id","handleStartRehearsal","handleEndRehearsal","handleLyricsAndChords","song","lyricsAndChords","handleLyrics","lyrics","off","disconnect","logout","emit","window","localStorage","removeItem","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/galrazabi/Desktop/Harmoni /client/src/components/RehearsalRoom.js"],"sourcesContent":["import { useEffect, useState, createContext } from \"react\";\nimport { useGetIsAdmin } from \"../hooks/useGetIsAdmin\"\nimport { useGetUserId } from '../hooks/useGetUserId'\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie'\nimport { MainPlayer } from './MainPlayer'\nimport { SearchSong } from \"./SearchSong\";\nimport { io } from 'socket.io-client';\nimport {Live} from './Live'\nimport config from '../config.json' ;\n\n\n// Create a context for managing WebSocket connections across components\nexport const SocketContext = createContext();\n\nexport const RehearsalRoom = () => {\n\n    const [socket, setSocket] = useState(null);\n    const [ isLive, setIsLive ] = useState(false)\n    const [lyricsOrChords, setLyricsOrChords] = useState([])\n    const [songData, setSongData] = useState({})\n    const navigate = useNavigate()\n  \n\n    const userId = useGetUserId()\n    const isAdmin = useGetIsAdmin()\n    const [_, setCookie] = useCookies([\"access_token\"])\n\n\n    useEffect(() => {\n        // Initialize socket connection only once and send the user id saved in the local storage\n        const newSocket = io(`${config.backend.url}`, {\n            query : {userId}\n        });\n        setSocket(newSocket);\n\n        newSocket.on(\"connect\", () => {\n            console.log(\"Socket successfully connected:\", newSocket.id);\n        });\n\n        const handleStartRehearsal = () => {\n            setIsLive(true)\n        };\n\n        const handleEndRehearsal = () => {\n            setIsLive(false)\n        };\n\n        const handleLyricsAndChords = ({song ,lyricsAndChords}) => {\n            setLyricsOrChords(lyricsAndChords)\n            setSongData(song)\n        };\n\n        const handleLyrics = ({song ,lyrics}) => {\n            setLyricsOrChords(lyrics)\n            setSongData(song)\n        };\n\n\n        newSocket.on(\"startRehearsal\", handleStartRehearsal);\n        newSocket.on(\"sendLyricsAndChords\",handleLyricsAndChords);\n        newSocket.on(\"sendLyrics\",handleLyrics);\n        newSocket.on(\"endRehearsal\", handleEndRehearsal);\n\n        \n        return () => { \n            // Clean up socket listeners on component unmount\n            newSocket.off(\"startRehearsal\", handleStartRehearsal); \n            newSocket.off(\"sendLyrics\", handleLyricsAndChords);\n            newSocket.off(\"sendLyricsAndChords\", handleLyricsAndChords);\n            newSocket.off(\"endRehearsal\", handleEndRehearsal); \n            newSocket.disconnect();\n        };\n    }, [userId, isAdmin]); \n\n    // Log out user, ending rehearsal if admin is live\n    const logout = () => {\n        if (isAdmin && isLive) { \n            socket.emit(\"adminEndRehearsal\")\n        }\n        setCookie(\"access_token\", \"\")\n        window.localStorage.removeItem(\"userId\")\n        window.localStorage.removeItem(\"isAdmin\")\n        navigate(\"/\")\n    }\n\n\n    return (\n        <SocketContext.Provider value={{ socket, logout }}>\n            <div className=\"container-fullscreen\">\n                {!isLive ? (\n                    <div>\n                        {isAdmin ? <SearchSong /> : <MainPlayer />}\n                    </div>\n                ) : (\n                    <Live songData={songData} lyricsOrChords={lyricsOrChords} />\n                )}\n            </div>\n\n    </SocketContext.Provider>\n    );\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}