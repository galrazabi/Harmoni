{"ast":null,"code":"var _jsxFileName = \"/Users/galrazabi/Desktop/Harmoni /client/src/components/RehearsalRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, createContext } from \"react\";\nimport { useGetIsAdmin } from \"../hooks/useGetIsAdmin\";\nimport { useGetUserId } from '../hooks/useGetUserId';\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\nimport { MainPlayer } from './MainPlayer';\nimport { SearchSong } from \"./SearchSong\";\nimport { io } from 'socket.io-client';\nimport { Live } from './Live';\nimport config from '../config.json';\nimport { RoomSelection } from \"./RoomSelection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SocketContext = /*#__PURE__*/createContext();\nexport const RehearsalRoom = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isLive, setIsLive] = useState(false);\n  const [lyricsOrChords, setLyricsOrChords] = useState([]);\n  const [songData, setSongData] = useState({});\n  const [roomId, setRoomId] = useState(\"\");\n  const navigate = useNavigate();\n  const userId = useGetUserId();\n  const isAdmin = useGetIsAdmin();\n  const [_, setCookie] = useCookies([\"access_token\"]);\n  useEffect(() => {\n    const newSocket = io(`${config.backend.url}`, {\n      query: {\n        userId\n      }\n    });\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Socket successfully connected:\", newSocket.id);\n    });\n    const handleJoinRoomSuccessfully = roomID => {\n      setRoomId(roomID);\n    };\n    const handleStartRehearsal = () => {\n      setIsLive(true);\n    };\n    const handleEndRehearsal = () => {\n      setIsLive(false);\n    };\n    const handleLyricsAndChords = ({\n      song,\n      lyricsAndChords\n    }) => {\n      setLyricsOrChords(lyricsAndChords);\n      setSongData(song);\n    };\n    const handleLyrics = ({\n      song,\n      lyrics\n    }) => {\n      setLyricsOrChords(lyrics);\n      setSongData(song);\n    };\n    const handleError = err => {\n      alert(err);\n    };\n    newSocket.on('joinRoomSuccessfully', handleJoinRoomSuccessfully);\n    newSocket.on(\"startRehearsal\", handleStartRehearsal);\n    newSocket.on(\"sendLyricsAndChords\", handleLyricsAndChords);\n    newSocket.on(\"sendLyrics\", handleLyrics);\n    newSocket.on(\"endRehearsal\", handleEndRehearsal);\n    newSocket.on(\"error\", handleError);\n    return () => {\n      newSocket.off('joinRoomSuccessfully', handleJoinRoomSuccessfully);\n      newSocket.off(\"startRehearsal\", handleStartRehearsal);\n      newSocket.off(\"sendLyrics\", handleLyricsAndChords);\n      newSocket.off(\"sendLyricsAndChords\", handleLyricsAndChords);\n      newSocket.off(\"endRehearsal\", handleEndRehearsal);\n      newSocket.off(\"error\", handleError);\n      newSocket.disconnect();\n      window.localStorage.clear();\n    };\n  }, [userId, isAdmin]);\n  const endRehearsal = () => {\n    socket.emit(\"adminEndRehearsal\", roomId);\n  };\n  const leaveRoom = () => {\n    if (roomId !== \"\") {\n      if (isAdmin) {\n        socket.emit(\"adminEndRehearsal\", roomId);\n      }\n      socket.emit(\"leaveRoom\", roomId);\n      setRoomId(\"\");\n    }\n  };\n  const logout = () => {\n    if (isAdmin && isLive) {\n      socket.emit(\"adminEndRehearsal\", roomId);\n    }\n    setCookie(\"access_token\", \"\");\n    window.localStorage.removeItem(\"userId\");\n    window.localStorage.removeItem(\"isAdmin\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      roomId,\n      leaveRoom,\n      logout\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), roomId !== \"\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: leaveRoom,\n          children: \"Leave Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 35\n        }, this), isAdmin && isLive && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: endRehearsal,\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), roomId === \"\" ? /*#__PURE__*/_jsxDEV(RoomSelection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this) : !isLive ? isAdmin ? /*#__PURE__*/_jsxDEV(SearchSong, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(MainPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 52\n      }, this) : /*#__PURE__*/_jsxDEV(Live, {\n        songData: songData,\n        lyricsOrChords: lyricsOrChords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this), isAdmin && roomId !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigator.clipboard.writeText(roomId),\n          children: \"Press to copy the Room ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(RehearsalRoom, \"CdTJnvY4Q3G6PYH8SHNvUYOXoVg=\", false, function () {\n  return [useNavigate, useGetUserId, useGetIsAdmin, useCookies];\n});\n_c = RehearsalRoom;\nvar _c;\n$RefreshReg$(_c, \"RehearsalRoom\");","map":{"version":3,"names":["useEffect","useState","createContext","useGetIsAdmin","useGetUserId","useNavigate","useCookies","MainPlayer","SearchSong","io","Live","config","RoomSelection","jsxDEV","_jsxDEV","SocketContext","RehearsalRoom","_s","socket","setSocket","isLive","setIsLive","lyricsOrChords","setLyricsOrChords","songData","setSongData","roomId","setRoomId","navigate","userId","isAdmin","_","setCookie","newSocket","backend","url","query","on","console","log","id","handleJoinRoomSuccessfully","roomID","handleStartRehearsal","handleEndRehearsal","handleLyricsAndChords","song","lyricsAndChords","handleLyrics","lyrics","handleError","err","alert","off","disconnect","window","localStorage","clear","endRehearsal","emit","leaveRoom","logout","removeItem","Provider","value","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["/Users/galrazabi/Desktop/Harmoni /client/src/components/RehearsalRoom.js"],"sourcesContent":["import { useEffect, useState, createContext } from \"react\";\nimport { useGetIsAdmin } from \"../hooks/useGetIsAdmin\"\nimport { useGetUserId } from '../hooks/useGetUserId'\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie'\nimport { MainPlayer } from './MainPlayer'\nimport { SearchSong } from \"./SearchSong\";\nimport { io } from 'socket.io-client';\nimport {Live} from './Live'\nimport config from '../config.json' ;\nimport { RoomSelection } from \"./RoomSelection\";\n\n\nexport const SocketContext = createContext();\n\nexport const RehearsalRoom = () => {\n\n    const [socket, setSocket] = useState(null);\n    const [ isLive, setIsLive ] = useState(false)\n    const [lyricsOrChords, setLyricsOrChords] = useState([])\n    const [songData, setSongData] = useState({})\n    const [roomId, setRoomId ] = useState(\"\")\n    const navigate = useNavigate()\n\n    const userId = useGetUserId()\n    const isAdmin = useGetIsAdmin()\n    const [_, setCookie] = useCookies([\"access_token\"])\n\n\n    useEffect(() => {\n        const newSocket = io(`${config.backend.url}`, {\n            query : {userId}\n        });\n        setSocket(newSocket);\n\n        newSocket.on(\"connect\", () => {\n            console.log(\"Socket successfully connected:\", newSocket.id);\n        });\n\n        const handleJoinRoomSuccessfully = (roomID) => {\n            setRoomId(roomID)\n        }\n\n        const handleStartRehearsal = () => {\n            setIsLive(true)\n        };\n\n        const handleEndRehearsal = () => {\n            setIsLive(false)\n        };\n\n        const handleLyricsAndChords = ({song ,lyricsAndChords}) => {\n            setLyricsOrChords(lyricsAndChords)\n            setSongData(song)\n        };\n\n        const handleLyrics = ({song ,lyrics}) => {\n            setLyricsOrChords(lyrics)\n            setSongData(song)\n        };\n\n        const handleError = (err) => {\n            alert(err)\n        }\n\n        newSocket.on('joinRoomSuccessfully', handleJoinRoomSuccessfully)\n        newSocket.on(\"startRehearsal\", handleStartRehearsal);\n        newSocket.on(\"sendLyricsAndChords\",handleLyricsAndChords);\n        newSocket.on(\"sendLyrics\",handleLyrics);\n        newSocket.on(\"endRehearsal\", handleEndRehearsal);\n        newSocket.on(\"error\", handleError);\n\n        \n        return () => { \n            newSocket.off('joinRoomSuccessfully', handleJoinRoomSuccessfully); \n            newSocket.off(\"startRehearsal\", handleStartRehearsal); \n            newSocket.off(\"sendLyrics\", handleLyricsAndChords);\n            newSocket.off(\"sendLyricsAndChords\", handleLyricsAndChords);\n            newSocket.off(\"endRehearsal\", handleEndRehearsal); \n            newSocket.off(\"error\", handleError); \n            newSocket.disconnect();\n            window.localStorage.clear()\n        };\n    }, [userId, isAdmin]); \n\n\n    const endRehearsal = () => {\n        socket.emit(\"adminEndRehearsal\", roomId)\n    }\n\n    \n    const leaveRoom = () => {\n        if(roomId !== \"\"){\n            if (isAdmin) {\n                socket.emit(\"adminEndRehearsal\", roomId)\n            }\n            socket.emit(\"leaveRoom\", roomId)\n            setRoomId(\"\")\n        }\n    }\n\n    const logout = () => {\n        if (isAdmin && isLive) { \n            socket.emit(\"adminEndRehearsal\", roomId)\n        }\n        setCookie(\"access_token\", \"\")\n        window.localStorage.removeItem(\"userId\")\n        window.localStorage.removeItem(\"isAdmin\")\n        navigate(\"/\")\n    }\n\n\n    return (\n        <SocketContext.Provider value={{ socket, roomId, leaveRoom, logout }}>\n            <div className=\"container-fullscreen\">\n            <div className=\"nav-bar\">\n                <button className=\"logout-btn\" onClick={logout}>Logout</button>\n                {roomId !== \"\" && <button className=\"logout-btn\" onClick={leaveRoom}>Leave Room</button>}\n                {isAdmin && isLive && <button className=\"logout-btn\" onClick={endRehearsal}>Quit</button>}\n            </div>  \n                { roomId === \"\" ? \n                    <RoomSelection />\n                 : ( !isLive ? \n                        isAdmin ? <SearchSong /> : <MainPlayer />\n                     : \n                        <Live songData={songData} lyricsOrChords={lyricsOrChords} />\n                )}\n\n                {isAdmin && roomId !== \"\" &&\n                    <div>\n                        <br/>\n                        <button onClick={() => navigator.clipboard.writeText(roomId)}>Press to copy the Room ID</button>\n                    </div>\n                }\n\n            </div>\n\n    </SocketContext.Provider>\n    );\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}